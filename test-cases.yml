---
- summary: |
    Проверка регистрации на сайте
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites: |
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    Nickname = Dima
    Email = любой новый email
    Password = password
  steps:
    - Нажимаем кнопку "sign up"
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим повторно Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Открывается главная страница с активной вкладкой лобби
    
- summary: |
    Проверка авторизации на сайте c существующим email
  requirement: |
    Пользователь должен успешно авторизоваться на сайте
  prerequisites: | 
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = test2test@mail.ru
    Password = password
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Открывается главная страница с активной вкладкой лобби
    
- summary: |
    Проверка авторизации на сайте c несуществующим email
  requirement: |
    Пользователь должен получить сообщение о не найденном email
  prerequisites: |
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = testautoriz@mail.ru 
    Password = password
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Появляется сообщение об ошибке "email не найден"
    
- summary: |
    Возможность запуска игры с ботом
  requirement: |
    Пользователь должен иметь возможность запустить игру с ботом
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - Нажимаем кнопку "create a game"
    - Выбираем тип игры "with a bot"
    - Нажимаем кнопку "create battle"
  expected-result: |
    Должна запуститься игра с ботом
    
- summary: |
    Возможность запуска игры с другом
  requirement: |
    Пользователь должен иметь возможность запустить игру с другом
  prerequisites: |
    Пользователь авторизован на сайте с двух разных аккаунтов на разных браузерах
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
  []
  steps:
    - Нажимаем кнопку "create a game"
    - Выбираем тип игры "with a friend"
    - Во вкладке "Choose opponent" выбираем nickname второго аккаунта
    - Нажимаем кнопку "Create invite"
    - Принимаем инвайт с помощью кнопки "Accept" со второго аккаунта
  expected-result: |
    Должна запуститься игра с другом
    
- summary: |
    Возможность запуска игры с другим игроком
  requirement: |
    Пользователь должен иметь возможность запустить игру с другим игроком
  prerequisites: |
    Пользователь авторизован на сайте с двух разных аккаунтов на разных браузерах
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
  []
  steps:
    - Нажимаем кнопку "create a game"
    - Выбираем тип игры "with other users"
    - Нажимаем кнопку "Create battle"
    - Со второго аккаунта во вкладке лобби нажимаем "Fight" напротив никнейма первого аккаунта
  expected-result: |
    Должна запуститься игра с другим игроком
    
- summary: |
    Безопасность и защита данных пользователя
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - смотрим в адресной строке имя протокола "http/https"
  expected-result: |
    на сайте должен использоваться протокол "https"
    
- summary: |
    Удобство использования в мобильной версии
  requirement: |
    Сайт должен быть удобным на мобильном устройстве
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - Открываем DevTools горячими клавишами Ctrl+Shift+I или через настройки и управление браузера инструменты разработчика
    - Нажимаем на кнопку "toggle device toolbar"
    - Нажимаем кнопку "create a game"
    - Нажимаем кнопку "with a bot"
    - Выбираем tag "math"
    - Нажимаем "create battle"
  expected-result: |
    Сайт адаптируется под мобильную версию и пользователь не имеет затруднения в использовании
    
- summary: |
    Тестирование на совместимость с последними версиями браузеров
  requirement: |
    Сайт должен быть протестирован на совместимость с последними версиями браузеров
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
   Сайт для проверки = https://www.browserstack.com/
  steps:
    - Переходим по ссылке https://www.browserstack.com/
    - Нажимаем на кнопку "Go to dashboard".
    - Выбираем нужные параметры для теста.
    - Во всех версиях браузеров открываем основные разделы (My profile, Users rating) и создаём новую игру "Create a game"
  expected-result: |
    Сайт должен быть совместим со всеми последними версиями браузеров.
    
- summary: |
    Таблица рейтинга на сайте
  requirement: |
    На сайте должна быть таблица рейтинга пользователей
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - В правом верхнем углу нажимаем на иконку профиля
    - Нажимаем кнопку "Users rating"
  expected-result: |
    Должна открыться страница с рейтингом пользователей
    
- summary: |
    Личная статистика побед и поражений
  requirement: |
    На сайте должна быть личная статистика побед и поражений пользователя
  prerequisites: |
    Пользователь авторизован на сайте
    У пользователя есть несколько сыгранных матчей
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - В правом верзнем углу нажимаем на иконку профиля
    - Нажимаем кнопку "My profile"
  expected-result: |
    Должна открыться страница с личной статистикой пользователя
    
- summary: |
    Выбор уровня сложности игры
  requirement: |
    Пользователь может выбрать игру по уровню сложность
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - Нажимаем кнопку "Create a game"
    - Во вкладке level выбираем уровень сложности по количеству звёзд
    - Нажимаем "Create battle"
  expected-result: |
    Должна запуститься игра по выбранной пользователем сложности
    
- summary: |
    Возможность просмотра кода соперника
  requirement: |
    Пользователь должен иметь возможность видеть код соперника
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень сложности "4 звезды"
    - Выбираем тип игры "with a bot"
    - Выбираем контроль времени "8 мин"
    - Выбираем тег "Math"
    - Нажимаем "Create battle"
    - Начинаем набирать любой код в терминале
    - Ожидаем пока противник начнёт печатать код
  expected-result: |
    В созданной игре пользователь видит код соперника
    
- summary: |
    Проверка варианта завершения игры "сдаться"
  requirement: |
    Пользователь во время игры должен иметь возможность сдаться
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    []
  steps:
    - Нажимаем кнопку "Create a game"
    - Во вкладке level выбираем уровень сложности по уровню звёзд
    - Во вкладке Game type выбираем "with a bot"
    - Нажимаем "Create battle"
    - Нажимаем на кнопку с красным флажком
    - В появившемся окне нажимаем кнопку "give up"
  expected-result: |
    Должно появится сообщение о поражении в игре
    
- summary: |
    Проверка варианта завершения игры "победа"
  requirement: |
    Победа пользователя в игре
  prerequisites: |
    Пользователь авторизован на сайте
    Открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    Верный вариант решения для победы
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };

module.exports = solution;
  steps:
    - Нажимаем кнопку "Create a game"
    - Во вкладке level выбираем уровень сложности 1 звезда
    - Во вкладке Game type выбираем "with a bot"
    - Во вкладке название задачи выбираем "rect_area"
    - Нажимаем "Create battle"
    - Дописываем верный вариант кода
    - Нажимаем зелёную кнопку "check solution"
  expected-result: |
    Должно появится сообщение о победе в игре
